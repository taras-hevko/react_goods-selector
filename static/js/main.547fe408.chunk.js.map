{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","selectedGoods","clearGoodsList","setState","selectGoods","good","removeGoods","filter","item","this","className","length","map","key","classNames","includes","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sPAIMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAGWC,EAAb,4MACEC,MAAQ,CACNC,cAAe,CAAC,QAFpB,EAKEC,eAAiB,WACf,EAAKC,UAAS,SAAAH,GAAK,MAAK,CACtBC,cAAe,QAPrB,EAWEG,YAAc,SAACC,GACb,EAAKF,UAAS,SAAAH,GAAK,MAAK,CACtBC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BI,SAb9C,EAiBEC,YAAc,SAACD,GACb,EAAKF,UAAS,SAAAH,GAAK,MAAK,CACtBC,cAAeD,EAAMC,cAAcM,QAAO,SAAAC,GAAI,OAAIA,IAASH,UAnBjE,4CAuBE,WAAU,IAAD,OACCJ,EAAkBQ,KAAKT,MAAvBC,cAER,OACE,yBAAKS,UAAU,OACb,wBAAIA,UAAU,cACXT,EAAcU,QAAU,EACrB,wBADH,UAEMV,EAFN,mBAKH,wBAAIS,UAAU,mBAAd,8BAGA,wBAAIA,UAAU,aACXZ,EAAgBc,KAAI,SAAAP,GAAI,OACvB,wBAAIQ,IAAKR,EAAMK,UAAU,aACvB,uBAAGA,UAAU,aAAb,UACML,GADN,UAIA,4BACEK,UAAWI,IAAW,CACpB,sBAAuBb,EAAcc,SAASV,GAC9C,sBAAuBJ,EAAcc,SAASV,KAEhDW,KAAK,SACLC,QAAS,kBACPhB,EAAcc,SAASV,GACnB,EAAKC,YAAYD,GACjB,EAAKD,YAAYC,KAGtBJ,EAAcc,SAASV,GAAQ,QAAU,eAMlD,yBAAKK,UAAU,oBACb,4BACEM,KAAK,SACLC,QAASR,KAAKP,eACdQ,UAAWI,IAAW,CACpB,oBAAqBb,EAAcU,OAAS,EAC5C,wBAAyBV,EAAcU,QAAU,KALrD,eA/DV,GAAyBO,IAAMC,WCb/BC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.547fe408.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport class App extends React.Component {\n  state = {\n    selectedGoods: ['Jam'],\n  }\n\n  clearGoodsList = () => {\n    this.setState(state => ({\n      selectedGoods: [],\n    }));\n  }\n\n  selectGoods = (good) => {\n    this.setState(state => ({\n      selectedGoods: [...state.selectedGoods, good],\n    }));\n  }\n\n  removeGoods = (good) => {\n    this.setState(state => ({\n      selectedGoods: state.selectedGoods.filter(item => item !== good),\n    }));\n  }\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">\n          {selectedGoods.length <= 0\n            ? 'Your goods list empty'\n            : `${selectedGoods} are Selected `\n          }\n        </h1>\n        <h2 className=\"App__title-list\">\n          Please select goods below:\n        </h2>\n        <ol className=\"App__list\">\n          {goodsFromServer.map(good => (\n            <li key={good} className=\"App__item\">\n              <p className=\"App__good\">\n                {`${good}`}\n                &#9997;\n              </p>\n              <button\n                className={classNames({\n                  'App__button--hided': !selectedGoods.includes(good),\n                  'App__button--active': selectedGoods.includes(good),\n                })}\n                type=\"button\"\n                onClick={() => (\n                  selectedGoods.includes(good)\n                    ? this.removeGoods(good)\n                    : this.selectGoods(good)\n                )}\n              >\n                {selectedGoods.includes(good) ? 'done ' : 'select' }\n              </button>\n            </li>\n          ))}\n        </ol>\n\n        <div className=\"App__button-wrap\">\n          <button\n            type=\"button\"\n            onClick={this.clearGoodsList}\n            className={classNames({\n              'App__button-clear': selectedGoods.length > 0,\n              'App__button-invisible': selectedGoods.length <= 0,\n            })}\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}